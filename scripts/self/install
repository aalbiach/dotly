#!/usr/bin/env bash

set -euo pipefail

source "$DOTLY_PATH/scripts/core/_main.sh"
source "$DOTLY_PATH/scripts/self/utils/install.sh"

installer::install_zsh() {
  output::error "Zsh not installed, installing"

  if dot package install zsh 2>&1; then
    output::solution "Zsh installed!"
  else
    output::error "Could not install Zsh!"
    exit 5
  fi
}

installer::install_custom_os() {
  if platform::is_macos; then
    output::answer "Installing MacOS Ô£ø custom packages"

    install_macos_custom
  elif platform::is_linux; then
    output::answer "Installing Linux üêß custom packages"

    install_linux_custom
  fi
}

installer::install_dependencies() {
  output::answer "Installing python packages"
  pip install -r "$DOTFILES_PATH/langs/python/requirements.txt" || true
  pip install -r "$DOTFILES_PATH/langs/python/requirements.txt"

  output::answer "Installing npm packages"
  xargs -I_ npm install -g "_" <"$DOTFILES_PATH/langs/js/global_modules.txt"
}

##? Install dotly and setup dotfiles
#?? 1.0.0
##?
##? Usage:
##?    install

if ! platform::command_exists dot; then
  dot() { "$DOTLY_PATH/bin/dot" "$@"; }
fi

output::answer "Creating dotfiles structure"
dot dotfiles create 2>&1

# @todo Backup if exists before
output::answer "Setting up symlinks"
dot symlinks apply 2>&1

output::answer "Installing custom OS config"
installer::install_custom_os

if ! platform::command_exists zsh; then
  installer::install_zsh
else
  output::answer "Zsh already installed!"
fi

if ! str::contains zsh "$SHELL"; then
  output::answer "Setting Zsh as the default shell (you'll have to logout and login to see the changes)"
  chsh -s "$(command -v zsh)"
fi

output::answer "Installing dependencies"
installer::install_dependencies
